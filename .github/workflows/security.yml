name: CI for Node GOAT

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # Post a message to the ITAS Discord channel with pipeline updates.
  # This is a notification job to indicate the start of the workflow.
  Discord-Begin:
    runs-on: ubuntu-latest
    steps:
    - name: Discord Notification start
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        username: ${{github.repository}}
        avatar-url: https://gravatar.com/avatar/be5d3fe06696117c467f199ddb4f1aed?s=400&d=robohash&r=g
        embed-title: "Security Pipeline jobs are starting... ðŸš€"
        embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: "[Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
        embed-author-name: "${{ github.triggering_actor }}"

  build-and-push:
    runs-on: ubuntu-latest
    needs: Discord-Begin
    steps:
      # Steps for building and pushing Docker image...
      - name: Notify Build Start
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{github.repository}}
          avatar-url: https://gravatar.com/avatar/be5d3fe06696117c467f199ddb4f1aed?s=400&d=robohash&r=g 
          content: "Build and push Docker image stage has started. #itas-276-github-alerts"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: "[Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-author-name: "${{ github.triggering_actor }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nodegoat:latest

  trufflehog:
    runs-on: ubuntu-latest
    needs: Discord-Begin
    steps:
    # Notification for starting TruffleHog scan.
    - name: Notify Trufflehog Scan Start
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        username: ${{github.repository}}
        avatar-url: https://gravatar.com/avatar/be5d3fe06696117c467f199ddb4f1aed?s=400&d=robohash&r=g 
        embed-title: "Starting secret scanning with TruffleHog."
        embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: "[Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
        embed-author-name: "${{ github.triggering_actor }}"

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        extra_args: --only-verified

  sca-snyk:
    runs-on: ubuntu-latest
    needs: [Discord-Begin, build-and-push, trufflehog]
    steps:
      # Notification for starting Snyk vulnerability scan.
      - name: Notify Snyk Scan Start
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{github.repository}}
          avatar-url: https://gravatar.com/avatar/be5d3fe06696117c467f199ddb4f1aed?s=400&d=robohash&r=g
          embed-title: "Starting Snyk scan for vulnerabilities."
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: "[Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-author-name: "${{ github.triggering_actor }}"

      - uses: actions/checkout@v3
      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/nodegoat:latest
          args: --file=Dockerfile
      - name: Save Snyk report as pipeline artifact
        uses: actions/upload-artifact@v4
        with:
          name: snyk-sca.sarif
          path: snyk.sarif

  sast-semgrep:
    runs-on: ubuntu-latest
    needs: [Discord-Begin, build-and-push, trufflehog]

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep

    steps:
      # Notification for starting Semgrep scan for Static Application Security Testing (SAST).
      - name: Notify Semgrep Scan Start
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{github.repository}}
          avatar-url: https://gravatar.com/avatar/be5d3fe06696117c467f199ddb4f1aed?s=400&d=robohash&r=g
          embed-title: "Starting Semgrep scan for SAST."
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: "[Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-author-name: "${{ github.triggering_actor }}"

      - uses: actions/checkout@v4

      - name: Run Semgrep for SAST
        uses: returntocorp/semgrep-action@v1
        # with:
          # config: p/security-audit 
          # generateSarif: "true"
      - name: full scan
        run: |
            semgrep \
            --sarif --output semgrep-sast.sarif \
            --metrics=off \
            --config="p/default"

      - name: Upload Semgrep report as pipeline artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sast.sarif
          path: semgrep-sast.sarif

  # Notification with a link to download the SARIF output file.        
  notify-sarif-download:
    needs: [sast-semgrep] 
    runs-on: ubuntu-latest
    steps:
      - name: Notify SARIF Download Link
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{github.repository}} 
          avatar-url: "https://gravatar.com/avatar/be5d3fe06696117c467f199ddb4f1aed?s=400&d=robohash&r=g"
          embed-title: "Security scanning complete"
          content: "Download the SARIF report for [semgrep-sast](${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: "[Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-author-name: "${{ github.triggering_actor }}"

  # Final notification to indicate the workflow has completed.
  notify-complete:
    needs: [notify-sarif-download] 
    runs-on: ubuntu-latest
    steps:
      - name: Workflow Completion Notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{github.repository}}
          avatar-url: "https://gravatar.com/avatar/be5d3fe06696117c467f199ddb4f1aed?s=400&d=robohash&r=g"
          embed-title: "CI for Node GOAT workflow has completed."
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: "[Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-author-name: "${{ github.triggering_actor }}"

